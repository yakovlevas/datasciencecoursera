q()
install.packages("swirl")
library(swirl)
swirl()
install.packages("devtools")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2movies)
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
library("swirl")
swirl()
dist(dataFrame)
hclust(distxy)
hclust(d=distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot()denmt
plot(denmt)
distmt
cmat
points(cx,cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist
mdist(x,y,cx,cy)
which.min(distTmp)
apply(distTmp,2,which.min)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
q()
lybrary(swirl)
library(swirl)
ls
ls()
rm(list=ls())
swirl()
swirl()
cvat
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x, y, pch =19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(x, y, pch =19, cex=2, col=cols1[newClust])
points(newCx, newCy, col;=cols1, pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(y, newClust, mean)
apply(distTmp2, newClust, mean)
apply(distTmp2, 2, which.min)
points()
points(x,y, pch=19, cex=2, col=cols[newClust2])
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy, pch=9, cex=2, col=cols1)
points(finalCx,finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
clear()
q()
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
q
q()
q()
q()
library(swirl)
swirl()
swirl()
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
svd(mat)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2[1:2,]
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1], %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
myImage(a1)
a2 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
q()
library(swirl)
swirl()
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c()] , )
kClust <- kmeans(sub1)
kClust <- kmeans(sub1, centers = 6)
sub1
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(kClust$y)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[laying,1:12], pch=19, ylab="Walkdown Cluster")
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
q()
erase.screen()
exit
q
q()
library(swirl)
swirl()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
head(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1)
)
ls
negative <- x1 <0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, )
cnt0 <- subset(pm0, State.Code == 36 & country.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
ะดั
ls
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
dates1
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline|(lwd=2, na.rm=TRUE)
abline(lwd=2, na.rm=TRUE)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply)
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summury(mn0)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
ls()
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(2, 52), mrg[, 3]))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
q()
as_data()
as.data()
asdata()
Sys.setlocale("LC_TIME", "en_US"); weekdays(Sys.Date()+0:6)
Sys.setlocale("LC_TIME","English United States")
q()
library(knitr)
setwd("~/R/courseraprojects/5. Reproducible Research")
knit2html("PA1_template.Rmd")
rmarkdown
install.packages("rmarkdown")
rmarkdown
library(rmarkdown)
?render
library(rmarkdown)
?render
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
?render
render("PA1_template.Rmd")
